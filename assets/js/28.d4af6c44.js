(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{207:function(e,t,a){"use strict";a.r(t);var s=a(0),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("随着业务需求和系统功能的增多，我们的工程和系统变得越来越复杂，多个事务的处理成为家常便饭。由于各个事务之间存在顺序依赖，包含等关系，相关的数据和逻辑也变得庞大。")]),e._v(" "),a("p",[e._v("在很多场景下，用户的操作行为改变了业务数据，业务数据的改变又引发UI界面的改变。我们不得不面对的一个问题就是，如何优雅地进行业务数据的管理与与UI界面的更新。")]),e._v(" "),a("blockquote",[a("p",[e._v("架构是对客观不足的妥协")])]),e._v(" "),a("p",[e._v("为了完成业务逻辑解耦，基于业务职能分化和规划的思想与目的，开发者们提出了MVC,MVVM,MVP等软件架构设计模式。这些模式在开发成本，规范复杂度，通信成本，团队合作成本等方面都有各自的优缺点，需要根据业务场景的特点酌情使用，但都将系统事务拆分成UI,业务逻辑与数据，完成不同业务实之间的解耦。")]),e._v(" "),a("h2",{attrs:{id:"mvvm-in-vue-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mvvm-in-vue-js","aria-hidden":"true"}},[e._v("#")]),e._v(" MVVM in Vue.js")]),e._v(" "),a("p",[e._v("为了解耦View与Model之间的交互，React和Vue框架在设计上都通过ViewModel作为数据中间层，并且采用了单向的数据流：Model层的数据更新触发View层展示的更新。")]),e._v(" "),a("p",[e._v("用户在View层触发的事件不再直接操作DOM，而是去修改对应的数据，数据的改变才触发对应DOM的改变。\n同时，为了提高框架性能，Vue采用了"),a("code",[e._v("Virtual DOM")]),e._v("机制实现数据到节点之间的映射关系，通过整合对DOM树的操作并复用已存在的DOM节点，从而达到高效操作和修改真实DOM树的目的。")]),e._v(" "),a("p",[e._v("作为一个渐进式框架，Vue本身定义了非常多的指令方便开发者日常开发（虽然我也总是记不住）。\n例如，模板语法中提供了"),a("code",[e._v("v-model")]),e._v("等一系列相关指令，以语法糖的形式实现了类似数据双向绑定的功能，用户在View层的交互和Model层数据的更新都会反映到ViewModel层上。")]),e._v(" "),a("h3",{attrs:{id:"view的数据来源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#view的数据来源","aria-hidden":"true"}},[e._v("#")]),e._v(" View的数据来源")]),e._v(" "),a("h2",{attrs:{id:"数据绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据绑定","aria-hidden":"true"}},[e._v("#")]),e._v(" 数据绑定")]),e._v(" "),a("h4",{attrs:{id:"v-bind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-bind","aria-hidden":"true"}},[e._v("#")]),e._v(" v-bind")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#v-bind",target:"_blank",rel:"noopener noreferrer"}},[e._v("v-bind"),a("OutboundLink")],1),e._v("指令可以动态地将一个表达式绑定到一个组件的特性（attr）或属性(prop)上， 为我们提供了一种使数据流从Model层到View层的方式。")]),e._v(" "),a("p",[a("code",[e._v("v-bind")]),e._v("的语法非常的丰富，除了属性值是动态的以外，Vue在2.6+的版本上还可以使用动态特性名（key也是动态的）：")]),e._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("button")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[e._v("v-bind:")]),e._v("[key]")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("button")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n")])])]),a("h4",{attrs:{id:"v-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-model","aria-hidden":"true"}},[e._v("#")]),e._v(" v-model")]),e._v(" "),a("p",[e._v("(v-model)[https://cn.vuejs.org/v2/api/#v-model]指令让我们可以在表单组件上创建"),a("code",[e._v("model<--\x3eview")]),e._v("双向数据绑定。")]),e._v(" "),a("p",[e._v("需要注意的是，从语义化的角度而言，使用"),a("code",[e._v("v-model")]),e._v("指令为不同的表单元素动态绑定的属性值和事件监听是不同的。例如，text元素使用value属性表示文本值，当text的value属性改变的时候则抛出input的事件；而radio元素只用checked属性表示选中状态，当状态改变则抛出change事件（"),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/forms.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("具体示例"),a("OutboundLink")],1),e._v("）。")]),e._v(" "),a("p",[e._v("如果我们需要修改或者自定义组件的"),a("code",[e._v("v-model")]),e._v(", 则可以通过自定义组件的model来实现：")]),e._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[e._v("  model: {\n    prop: 'checked',\n    event: 'change'\n  },\n")])])]),a("p",[e._v("另外，"),a("code",[e._v("v-model")]),e._v("仅仅提供了一个属性的双向绑定语法，如果一个组件上有多个属性需要双向绑定，我们可以使用"),a("code",[e._v("v-bind")]),e._v("和监听组件内部事件的方式来实现。Vue也为这种方式提供了默认的语法糖"),a("code",[e._v("v-bind:xxxx.sync")]),e._v("来实现同样的功能（"),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/components-custom-events.html",target:"_blank",rel:"noopener noreferrer"}},[e._v(".sync 修饰符"),a("OutboundLink")],1),e._v("）")])])}),[],!1,null,null,null);t.default=n.exports}}]);