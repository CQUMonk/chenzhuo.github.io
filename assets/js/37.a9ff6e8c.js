(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{219:function(e,t,a){"use strict";a.r(t);var o=a(0),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"cookie同步与管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie同步与管理","aria-hidden":"true"}},[e._v("#")]),e._v(" Cookie同步与管理")]),e._v(" "),a("p",[e._v("在客户端混合开发过程中，通常需要H5与Native业务之间实现用户基础数据信息的共享。")]),e._v(" "),a("p",[e._v("例如，用户成功登录了App，并在App内访问某个需要用户信息的Web页面。那么，如何将用户成功登录的状态以及相关用户信息数据告诉Web页面呢？")]),e._v(" "),a("p",[e._v("我们利用Webview的Cookie管理维护机制，结合客户端基本数据的本地数据缓存和管理，可以满足在同一App内，Web页面与Naitve页面之间的数据信息的共享和同步需求。")]),e._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("Cookie")]),e._v(" "),a("p",[e._v("HTTP Cookie（也叫Web Cookie或浏览器Cookie）是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies",target:"_blank",rel:"noopener noreferrer"}},[e._v("了解更多"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"cookiemanager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookiemanager","aria-hidden":"true"}},[e._v("#")]),e._v(" CookieManager")]),e._v(" "),a("p",[e._v("Android系统中，Webview 将Cookie数据信息存放于本地数据库文件中：")]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v("/data/data/package_name/app_WebView/Cookies.db")])])]),e._v(" "),a("p",[e._v("对于Cookies的CRUD操作则交给"),a("code",[e._v("CookieManager")]),e._v("来完成，（Android 5.0 之前通过"),a("code",[e._v("CookieSyncManager")]),e._v("管理）, 它为Cookie的读写提供了简单的"),a("code",[e._v("get")]),e._v("和"),a("code",[e._v("set")]),e._v("方法。")]),e._v(" "),a("p",[e._v("为了保证Webview的性能，Webview的Cookie分别缓存于内存和磁盘上。因此需要我们注意的是，在Android 5.0之前进行Cookie写操作时需要显式的通过调用"),a("code",[e._v("CookieSyncManager")]),e._v("的同步方法来负责维护两种缓存之间的数据同步：")]),e._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("CookieSyncManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("createInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("startSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Cookie 写操作")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("CookieSyncManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("createInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("stopSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[a("code",[e._v("CookieSyncManager")]),e._v("则会在异步线程里定时完成Cookie的同步任务。\n如果需要立即将内存中的Cookie刷新到磁盘中，则需要调用"),a("code",[e._v("sync()")]),e._v("方法来强制完成同步操作。")]),e._v(" "),a("p",[e._v("而在Android 5.0后，"),a("code",[e._v("CookieSyncManager")]),e._v("被废弃掉，新的Cookie管理类 "),a("code",[e._v("CookieManager")]),e._v("将Cookie同步操作内置在写操作的Api中，无需显式调用。\n需要强制同步，则调用"),a("code",[e._v("flush()")]),e._v("方法即可。")])])}),[],!1,null,null,null);t.default=n.exports}}]);